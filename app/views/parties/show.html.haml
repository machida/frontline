:javascript
  $(function(){
    var h, m, t;
    h = $(".end").data("hour");
    m = $(".end").data("min");
    t = new Timer(h, m);
    t.start();
    $('.end .best_in_place').live('ajax:success', function(event, data, status, xhr) {
      var json;
      console.log(data);
      json = $.parseJSON(data);
      $(".end").attr("data-hour", json.end_hour).attr("data-min", json.end_min);
      t.stop();
      t = new Timer(json.end_hour, json.end_min);
      return t.start();
    });
  });

- content_for :header do
  - if notice
    #notice
      .content
        = notice
  .header
    %h1= link_to @party.name, @party
    %nav.members
      %ul
        %li.all
          =link_to "all", @party
        - @party.members.each do |member|
          = content_tag_for :li, member do
            %a{:href => ""}
              = image_tag member.image_url(:thumb)
    .times
      .now
      .remain
      .end{"data-hour" => @join.end_hour, "data-min" => @join.end_min}
        = best_in_place @join, :end_hour, type: :select, collection: (0..23).map{|i| [i, i < 10 ? "0#{i}" : i.to_s]}, nil: "00"
        &#58;
        = best_in_place @join, :end_min, type: :select, collection: [0, 15, 30, 45].map{|i| [i, i < 10 ? "0#{i}" : i.to_s]}, nil: "00"
      .leave
        %a{:href => ""} 退席

.members
  %table
    %tbody
      %tr
        - @party.members.each do |member|
          = content_tag_for :td, member do
            .member{:class => member.joins.find_by_party_id(@party.id).state}
              .header
                %h1.icon
                  %a{:href => ""}
                    = image_tag member.image_url(:thumb)
                .information
                  %ul
                    %li.name
                      %a{:href => ""}
                        = member.name
                    %li.state
                      - if user_signed_in? && current_user == member
                        = best_in_place @join, :state, type: :select, collection: Join::STATE
                      - else
                        = member.joins.find_by_party_id(@party.id).state_text

              .body
                .current
                  .label
                    %h2 Current
                  .doing
                    %ul.tasks
                      - task = member.tasks.current(@party.id).first
                      - if task
                        = render task
                      - else
                        %li.empty
                          未選択
                    .comments
                      %a
                        aaaa
                .backlog
                  .label
                    %h2 Backlog
                  - if user_signed_in? && current_user == member
                    .add
                      = form_for [@party, member.tasks.build], :remote => true do |f|
                        :javascript
                          $(document).ready(function(){
                            $("#task_content").autoGrow();
                          });
                        = f.text_area :content, :rows => 7, :cols => 29
                        = f.submit
                  %ul.tasks
                    = render member.tasks.backlog(@party.id)
                  
                .done
                  .label
                    %h2 Done
                  %ul.tasks
                    = render member.tasks.done(@party.id)
